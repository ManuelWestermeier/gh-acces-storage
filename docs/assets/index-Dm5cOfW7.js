(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))d(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&d(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function d(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const H=new TextEncoder,A=new TextDecoder;async function T(a){const r=await crypto.subtle.digest("SHA-256",H.encode(a)),s=await crypto.subtle.digest("SHA-256",r);return crypto.subtle.importKey("raw",s,{name:"AES-CBC"},!1,["encrypt","decrypt"])}async function x(a,r){const s=crypto.getRandomValues(new Uint8Array(16)),d=await T(r),e=H.encode(a),t=await crypto.subtle.encrypt({name:"AES-CBC",iv:s},d,e),n=new Uint8Array(s.length+t.byteLength);return n.set(s,0),n.set(new Uint8Array(t),s.length),btoa(String.fromCharCode(...n))}async function w(a,r){const s=Uint8Array.from(atob(a),c=>c.charCodeAt(0)),d=s.slice(0,16),e=s.slice(16),t=await T(r),n=await crypto.subtle.decrypt({name:"AES-CBC",iv:d},t,e);return A.decode(n)}const C=(()=>{const a="data-data",r="main",s="https://api.github.com";let d="",e="";function t(o){return crypto.subtle.digest("SHA-256",new TextEncoder().encode(o)).then(l=>Array.from(new Uint8Array(l)).map(i=>i.toString(16).padStart(2,"0")).join(""))}async function n(o,l,i=null){const h=await fetch(l,{method:o,headers:{Authorization:`Bearer ${d}`,Accept:"application/vnd.github+json","Content-Type":"application/json"},body:i?JSON.stringify(i):void 0});if(!h.ok)throw new Error(await h.text());return h.json()}async function c(o){try{return await n("GET",`${s}/repos/${e}/${a}/contents/${o}?ref=${r}`)}catch{return null}}async function u(o,l){const i=await c(o),h={message:new Date,content:btoa(l),branch:r};return i&&(h.sha=i.sha),n("PUT",`${s}/repos/${e}/${a}/contents/${o}`,h)}async function m(o,l){const i=await c(o);if(!i)return;const h={message:l,sha:i.sha,branch:r};return n("DELETE",`${s}/repos/${e}/${a}/contents/${o}`,h)}async function y(o){const l=[];for(let i=0;i<o.length;i+=1e5)l.push(o.slice(i,i+1e5));return l}async function g(o){const l=await t(`${o}/length.dat`),i=await c(l);if(!i)return null;const h=parseInt(atob(i.content));let p="";for(let f=0;f<h;f++){const k=await t(`${o}/${f}.dat`),M=await c(k);if(!M)break;p+=atob(M.content)}return p}async function $(o,l){const i=await y(l);for(let p=0;p<i.length;p++){const f=await t(`${o}/${p}.dat`);await u(f,i[p])}const h=await t(`${o}/length.dat`);await u(h,String(i.length))}async function E(o){const l=await t(`${o}/length.dat`),i=await c(l);if(!i)return;const h=parseInt(atob(i.content));for(let p=0;p<h;p++){const f=await t(`${o}/${p}.dat`);await m(f,`Delete chunk ${p} of ${o}`)}await m(l,`Delete length of ${o}`)}async function N(){try{await n("GET",`${s}/repos/${e}/${a}`)}catch{await n("POST",`${s}/user/repos`,{name:a,private:!0,auto_init:!0,default_branch:r})}}return{async init(o){try{return d=o,e=(await n("GET",`${s}/user`)).login,await N(),localStorage.setItem("gh-auth-token",o),!0}catch{return!1}},get:g,set:$,delete:E}})();async function P({width:a,height:r,path:s,password:d}){const e=await w(s,d);document.body.className="frame-body",document.body.style.width=a,document.body.style.height=r;const t=document.createElement("p");t.textContent=`Do you want to delete "${e}"?`,t.className="confirm-message";const n=document.createElement("button");n.textContent="Yes",n.className="confirm-btn";const c=document.createElement("button");c.textContent="No",c.className="cancel-btn",document.body.innerHTML="",document.body.appendChild(t),document.body.appendChild(n),document.body.appendChild(c),n.addEventListener("click",async()=>{document.body.innerHTML="<h1 class='status success'>Deleting... (max 10s)</h1>";try{await C.delete(s),document.body.innerHTML="<h1 class='status success'>Deleted</h1>",parent.postMessage("ok","*")}catch(u){document.body.innerHTML="<h1 class='status cancelled'>Failed</h1>",parent.postMessage({status:"error",error:u.message},"*")}}),c.addEventListener("click",()=>{document.body.innerHTML="<h1 class='status cancelled'>Cancelled</h1>",parent.postMessage("false","*")})}async function v({width:a,height:r,path:s,password:d}){document.body.className="frame-body",document.body.style.width=a,document.body.style.height=r;const e=await w(s,d),t=document.createElement("p");t.textContent=`Do you want to read from "${e}"?`,t.className="confirm-message";const n=document.createElement("button");n.textContent="Yes",n.className="confirm-btn";const c=document.createElement("button");c.textContent="No",c.className="cancel-btn",document.body.innerHTML="",document.body.appendChild(t),document.body.appendChild(n),document.body.appendChild(c),n.addEventListener("click",async()=>{document.body.innerHTML="<h1 class='status success'>Loading... (max 10s)</h1>";try{const u=await C.get(s),m=await w(u,d),y=document.createElement("pre");y.textContent=m,y.className="decrypted-content",document.body.innerHTML="",document.body.appendChild(y),parent.postMessage({status:"ok",data:m},"*")}catch(u){document.body.innerHTML="<h1 class='status cancelled'>Failed</h1>",parent.postMessage({status:"error",error:u.message},"*")}}),c.addEventListener("click",()=>{document.body.innerHTML="<h1 class='status cancelled'>Cancelled</h1>",parent.postMessage("false","*")})}async function S({width:a,height:r,path:s,data:d,password:e}){document.body.className="frame-body",document.body.style.width=a,document.body.style.height=r;const t=await w(s,e),n=await w(d,e),c=document.createElement("p");c.textContent=`Do you want to write to "${t}" with this data:

${n}`,c.className="confirm-message";const u=document.createElement("button");u.textContent="Yes",u.className="confirm-btn";const m=document.createElement("button");m.textContent="No",m.className="cancel-btn",document.body.innerHTML="",document.body.appendChild(c),document.body.appendChild(u),document.body.appendChild(m),u.addEventListener("click",async()=>{document.body.innerHTML="<h1 class='status success'>Loading... (max 10s)</h1>";try{await C.set(s,d),document.body.innerHTML="<h1 class='status success'>Worked</h1>",parent.postMessage("ok","*")}catch(y){document.body.innerHTML="<h1 class='status cancelled'>Failed</h1>",parent.postMessage({status:"error",error:y.message},"*")}}),m.addEventListener("click",()=>{document.body.innerHTML="<h1 class='status cancelled'>Cancelled</h1>",parent.postMessage("false","*")})}function D(){return new Promise((a,r)=>{document.body.className="frame-body",document.body.style.width="100%",document.body.style.height="100%",document.body.innerHTML="";const s=document.createElement("form");s.className="password-form";const d=document.createElement("label");d.textContent="Enter password:",d.className="confirm-message",d.setAttribute("for","encryption-password");const e=document.createElement("input");e.type="password",e.name="encryption-password",e.id="encryption-password",e.className="password-input",e.placeholder="Password",e.autofocus=!0,e.required=!0;const t=document.createElement("button");t.type="submit",t.textContent="OK",t.className="confirm-btn";const n=document.createElement("p");n.className="error-message",n.style.color="red",n.style.height="1.2em",n.style.margin="0.5em 0 0 0",s.appendChild(d),s.appendChild(e),s.appendChild(t),s.appendChild(n),document.body.appendChild(s);async function c(u){const y=new TextEncoder().encode(u),g=await crypto.subtle.digest("SHA-512",y);return Array.from(new Uint8Array(g)).map(E=>E.toString(16).padStart(2,"0")).join("")}s.addEventListener("submit",async u=>{u.preventDefault(),n.textContent="";const m=e.value;if(!m){n.textContent="Password cannot be empty";return}const y=await c(m),g=localStorage.getItem("encryption-password-hash");g?g===y?(document.body.innerHTML="<h1 class='status success'>Password verified</h1>",parent.postMessage("ok","*"),a(m)):(n.textContent="Password incorrect, please try again.",e.value="",e.focus(),parent.postMessage("false","*")):(localStorage.setItem("encryption-password-hash",y),document.body.innerHTML="<h1 class='status success'>Password stored</h1>",parent.postMessage("ok","*"),a(m))})})}function L(a){return document.body.style.color="red",document.body.innerText=a,console.error(a),!1}const b=new URL(`https://gh-acces.duckdns.org/${new URL(document.location).hash.replace("#","")}`);async function B(){const a=b.searchParams.get("w")||innerWidth,r=b.searchParams.get("h")||innerHeight,s=b.searchParams.get("p"),d=b.searchParams.get("data"),e=b.searchParams.get("fn");if(!e)return L("url search param fn (function set/get/delete) have to be setted");if(!s)return L("url search param p (path) have to be setted");const t=await D(),n=await x(s,t),c=d?await x(d,t):"";for(;!await C.init(localStorage.getItem("gh-auth-token")||prompt("Input github auth token: https://github.com/settings/tokens/new"),t););if(e==="delete")await P({width:a,height:r,path:n,password:t});else if(e==="get")await v({width:a,height:r,path:n,password:t});else if(e==="set"){if(!c)return L("url search param data have to be setted");await S({width:a,height:r,path:n,data:c,password:t})}return!0}B();
