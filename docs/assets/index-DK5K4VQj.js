(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function a(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=a(e);fetch(e.href,t)}})();const y=(()=>{const c="data-data",d="main",a="https://api.github.com";let r="",e="";function t(n){return crypto.subtle.digest("SHA-256",new TextEncoder().encode(n)).then(i=>Array.from(new Uint8Array(i)).map(s=>s.toString(16).padStart(2,"0")).join(""))}async function o(n,i,s=null){const l=await fetch(i,{method:n,headers:{Authorization:`Bearer ${r}`,Accept:"application/vnd.github+json","Content-Type":"application/json"},body:s?JSON.stringify(s):void 0});if(!l.ok)throw new Error(await l.text());return l.json()}async function h(n){try{return await o("GET",`${a}/repos/${e}/${c}/contents/${n}?ref=${d}`)}catch{return null}}async function g(n,i){const s=await h(n),l={message:new Date,content:btoa(i),branch:d};return s&&(l.sha=s.sha),o("PUT",`${a}/repos/${e}/${c}/contents/${n}`,l)}async function b(n,i){const s=await h(n);if(!s)return;const l={message:i,sha:s.sha,branch:d};return o("DELETE",`${a}/repos/${e}/${c}/contents/${n}`,l)}async function $(n){const i=[];for(let s=0;s<n.length;s+=1e5)i.push(n.slice(s,s+1e5));return i}async function L(n){const i=await t(`${n}/length.dat`),s=await h(i);if(!s)return null;const l=parseInt(atob(s.content));let u="";for(let m=0;m<l;m++){const T=await t(`${n}/${m}.dat`),w=await h(T);if(!w)break;u+=atob(w.content)}return u}async function E(n,i){const s=await $(i);for(let u=0;u<s.length;u++){const m=await t(`${n}/${u}.dat`);await g(m,s[u])}const l=await t(`${n}/length.dat`);await g(l,String(s.length))}async function M(n){const i=await t(`${n}/length.dat`),s=await h(i);if(!s)return;const l=parseInt(atob(s.content));for(let u=0;u<l;u++){const m=await t(`${n}/${u}.dat`);await b(m,`Delete chunk ${u} of ${n}`)}await b(i,`Delete length of ${n}`)}async function C(){try{await o("GET",`${a}/repos/${e}/${c}`)}catch{await o("POST",`${a}/user/repos`,{name:c,private:!0,auto_init:!0,default_branch:d})}}return{async init(n){try{return r=n,e=(await o("GET",`${a}/user`)).login,await C(),localStorage.setItem("gh-auth-token",n),!0}catch{return!1}},get:L,set:E,delete:M}})();function H({width:c,height:d,path:a}){document.body.className="frame-body",document.body.style.width=c,document.body.style.height=d;const r=document.createElement("p");r.textContent=`Do you want to delete "${a}"?`,r.className="confirm-message";const e=document.createElement("button");e.textContent="Yes",e.className="confirm-btn";const t=document.createElement("button");t.textContent="No",t.className="cancel-btn",document.body.innerHTML="",document.body.appendChild(r),document.body.appendChild(e),document.body.appendChild(t),e.addEventListener("click",async()=>{document.body.innerHTML="<h1 class='status success'>Deleting... (max 10s)</h1>";try{await y.delete(a),document.body.innerHTML="<h1 class='status success'>Deleted</h1>",parent.postMessage("ok","*")}catch(o){document.body.innerHTML="<h1 class='status cancelled'>Failed</h1>",parent.postMessage({status:"error",error:o.message},"*")}}),t.addEventListener("click",()=>{document.body.innerHTML="<h1 class='status cancelled'>Cancelled</h1>",parent.postMessage("false","*")})}function k({width:c,height:d,path:a}){document.body.className="frame-body",document.body.style.width=c,document.body.style.height=d;const r=document.createElement("p");r.textContent=`Do you want to read from "${a}"?`,r.className="confirm-message";const e=document.createElement("button");e.textContent="Yes",e.className="confirm-btn";const t=document.createElement("button");t.textContent="No",t.className="cancel-btn",document.body.innerHTML="",document.body.appendChild(r),document.body.appendChild(e),document.body.appendChild(t),e.addEventListener("click",async()=>{document.body.innerHTML="<h1 class='status success'>Loading... (max 10s)</h1>";try{const o=await y.get(a);document.body.innerHTML="<h1 class='status success'>Loaded</h1>",parent.postMessage({status:"ok",data:o},"*")}catch(o){document.body.innerHTML="<h1 class='status cancelled'>Failed</h1>",parent.postMessage({status:"error",error:o.message},"*")}}),t.addEventListener("click",()=>{document.body.innerHTML="<h1 class='status cancelled'>Cancelled</h1>",parent.postMessage("false","*")})}function N({width:c,height:d,path:a,data:r}){document.body.className="frame-body",document.body.style.width=c,document.body.style.height=d;const e=document.createElement("p");e.textContent=`Do you want to write to "${a}" with this data: "${r}"?`,e.className="confirm-message";const t=document.createElement("button");t.textContent="Yes",t.className="confirm-btn";const o=document.createElement("button");o.textContent="No",o.className="cancel-btn",document.body.innerHTML="",document.body.appendChild(e),document.body.appendChild(t),document.body.appendChild(o),t.addEventListener("click",async()=>{document.body.innerHTML="<h1 class='status success'>Loadning... (max 10s)</h1>",await y.set(a,r),document.body.innerHTML="<h1 class='status success'>Worked</h1>",parent.postMessage("ok","*")}),o.addEventListener("click",()=>{document.body.innerHTML="<h1 class='status cancelled'>Cancelled</h1>",parent.postMessage("false","*")})}function p(c){return document.body.style.color="red",document.body.innerText=c,console.error(c),!1}const f=new URL(`https://gh-acces.duckdns.org/${new URL(document.location).hash.replace("#","")}`);async function x(){const c=f.searchParams.get("w")||innerWidth,d=f.searchParams.get("h")||innerHeight,a=f.searchParams.get("p"),r=f.searchParams.get("data"),e=f.searchParams.get("fn");if(!e)return p("url search param fn (function set/get/delete) have to be setted");if(!a)return p("url search param p (path) have to be setted");for(;!await y.init(localStorage.getItem("gh-auth-token")||prompt("Input github auth token: https://github.com/settings/tokens/new")););if(e=="delete")H({width:c,height:d,path:a});else if(e=="get")k({width:c,height:d,path:a});else if(e=="set"){if(!r)return p("url search param data have to be setted");N({width:c,height:d,path:a,data:r})}return!0}x();
